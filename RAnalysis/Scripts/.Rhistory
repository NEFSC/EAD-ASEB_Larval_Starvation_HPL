message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
ggarrange(Frontloading_smooth, Frontloading_MEAN.SE, ncol=2)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
View( (df_total %>% filter(Frontloaded_criteria == 'frontloaded')))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
write.csv(Frontloaded_AirradiansTranscriptIDs, file = "Output/Transcriptomics/WGCNA/challenge/WGCNA_Frontloaded_transcripts_moduleredsalmon.csv")
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
pdf("Output/Transcriptomics/WGCNA/challenge/WGCNA_Frontloaded_transcripts_moduleredsalmon.pdf", height=4, width =8)
ggarrange(Frontloading_smooth, Frontloading_MEAN.SE, ncol=2)
dev.off()
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
loop_df    <- as.data.frame(unique(rlogExp_LowvHigh.long.meta.means$Airradians_TranscriptID))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
loop_df    <- as.data.frame(unique(rlogExp_LowvHigh.long.meta.means$Airradians_TranscriptID))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
loop_df    <- as.data.frame(unique(vstExp_Challenge.long.meta.means$Airradians.TranscriptID))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
# loop_df    <- as.data.frame(unique(rlogExp_Challenge.long.meta.means$Airradians.TranscriptID))
loop.table <- data.frame(matrix(nrow = 1, ncol = 9)) # create dataframe to save cumunalitively during for loop
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
colnames(loop.table)<-c('Airradians.TranscriptID',
'Protein_name',
'baseMeanNAIVE_control',
'baseMeanHABITUATED_control',
'baseMeanNAIVE_response',
'baseMeanHABITUATED_response',
'ControlRatio',
'ResponseRatioHigh',
'Frontloaded_criteria')
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
df_total <- data.frame() # start dataframe
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
for (i in 1:nrow(loop_df)) {
df_loop <- vstExp_Challenge.long.meta.means %>% filter(Airradians.TranscriptID %in% loop_df[i,])
# df_loop <- rlogExp_Challenge.long.meta.means %>% filter(Airradians.TranscriptID %in% loop_df[i,])
if (nrow(df_loop) == 6) {
loop.table$Airradians.TranscriptID     <- loop_df[i,]
loop.table$Protein_name                <- df_loop$Protein_name[1]
# loop.table$baseMeanNAIVE_control       <- (df_loop %>% dplyr::filter(pCO2_exposure %in% 'low' & pCO2_history %in% 'low'))$mean.rlogExp
# loop.table$baseMeanHABITUATED_control  <- (df_loop %>% dplyr::filter(pCO2_exposure %in% 'low' & pCO2_history %in% 'severe'))$mean.rlogExp
#
# loop.table$baseMeanNAIVE_response      <- (df_loop %>% dplyr::filter(pCO2_exposure %in% 'severe' & pCO2_history %in% 'low'))$mean.rlogExp
# loop.table$baseMeanHABITUATED_response <- (df_loop %>% dplyr::filter(pCO2_exposure %in% 'severe' & pCO2_history %in% 'severe'))$mean.rlogExp
loop.table$baseMeanNAIVE_control       <- (df_loop %>% dplyr::filter(pCO2_exposure %in% 'low' &
pCO2_history %in% 'low'))$mean.vstExp
loop.table$baseMeanHABITUATED_control  <- (df_loop %>% dplyr::filter(pCO2_exposure %in% 'severe' &
pCO2_history %in% 'severe'))$mean.vstExp
loop.table$baseMeanNAIVE_response      <- (df_loop %>% dplyr::filter(pCO2_exposure %in% 'severe' &
pCO2_history %in% 'low'))$mean.vstExp
loop.table$baseMeanHABITUATED_response <- (df_loop %>% dplyr::filter(pCO2_exposure %in% 'low' &
pCO2_history %in% 'severe'))$mean.vstExp
loop.table$ControlRatio                <- loop.table$baseMeanHABITUATED_control / loop.table$baseMeanNAIVE_control
loop.table$ResponseRatioHigh           <- ( loop.table$baseMeanHABITUATED_response /
loop.table$baseMeanHABITUATED_control ) /
( loop.table$baseMeanNAIVE_response /
loop.table$baseMeanNAIVE_control)
loop.table <- loop.table %>%
dplyr::mutate(Frontloaded_criteria =
case_when(
ControlRatio > 1 &
ResponseRatioHigh < 1 ~ "frontloaded",
ControlRatio < 1.00 &
ResponseRatioHigh < 1.00 ~ "low expression relative to naive",
ControlRatio < 1.00 &
ResponseRatioHigh > 1.00 ~ "more responsive relative to naive"))
} else {NA}
df <- data.frame(loop.table) # name dataframe for this singl e row
df_total <- rbind(df_total,df) #bind to a cumulative list dataframe
}
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
WGCNA_frontloaded <- (df_total %>% filter(Frontloaded_criteria == 'frontloaded'))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
Frontloading_smooth <- df_total %>%
dplyr::mutate(FrontMod_color =
ifelse(ResponseRatioHigh < 1.0 &
ControlRatio > 1.0, "True", "False")) %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatioHigh <1.2) %>%
ggplot(aes(x=ResponseRatioHigh, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.1)) +
scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.1)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Low pCO2 exposure ratio",
x = "Response ratio to high pCO2",
title = "Frontloading criteria (shaded)") +
expand_limits(x = 1.1, y = 1.1) +
annotate("rect", xmin = 0.9, xmax = 1, ymin = 1, ymax = 1.1,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
# truncate df_total for only genes assigned as 'frontloaded' from module red
Frontloaded_AirradiansTranscriptIDs <- df_total %>% filter(Frontloaded_criteria %in% 'frontloaded')
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
# truncate the vst Exp means (mean exp for each gene within pCO2 history * pCO2 exposure, N = 5 each)
IDtargets                           <- vstExp_Challenge.long.meta.means %>%
dplyr::filter(Airradians.TranscriptID %in%
unique(Frontloaded_AirradiansTranscriptIDs$Airradians.TranscriptID))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
IDtargets_stats <- IDtargets %>% dplyr::filter(pCO2_exposure %in% c('low', 'severe'))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
mod <- lm(mean.vstExp~pCO2_history*pCO2_exposure,data=IDtargets_stats)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
shapiro.test(resid(mod)) # p-value < 2.2e-16
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
summary(aov(mod))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
mod <- scheirerRayHare(mean.vstExp~pCO2_history*pCO2_exposure,data=IDtargets_stats)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
mod
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
plotting <- IDtargets %>% group_by(pCO2_history, pCO2_exposure) %>%
dplyr::summarise(mean_meanvstExp = mean(mean.vstExp),
sd_vstExp = sd(mean.vstExp),
n = n(),
se_vstExp = sd_vstExp / sqrt(n)
)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
Frontloading_MEAN.SE <- plotting %>%
dplyr::filter(pCO2_exposure %in% c('low', 'severe')) %>%
ggplot(aes(x=pCO2_exposure, y = mean_meanvstExp, fill=pCO2_history)) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history),
size = 4.5,position=position_dodge(.4)) +
geom_line() +
theme_classic() +
labs(y= "vst expression",
x = "pCO2 exposure",
title = "Frontloaded genes") +
geom_errorbar(aes(ymin=(mean_meanvstExp)-(se_vstExp), # new means and se by treatment
ymax=(mean_meanvstExp)+(se_vstExp)), # new means and se by treatment
width=0,position=position_dodge(.4)) # width determines the length of the end ticks
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
ggarrange(Frontloading_smooth, Frontloading_MEAN.SE, ncol=2)
MEs_1
pCO2history_1.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_1, 3))
pCO2history_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_1, 3))
pa                  = cluster::pam(pCO2history_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 1,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
AllpCO2_1.text <-  as.matrix(signif(moduleTraitPvalue_AllpCO2_1, 3))
AllpCO2_1.COR  <-  as.matrix(signif(moduleTraitCor_AllpCO2_1, 3))
pa                  = cluster::pam(AllpCO2_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(performance)
library(car)
library(ggpubr)
library(SciViews)
library(Rmisc)
library(hrbrthemes)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis")
# F2s
F1_length <- read.csv(file="Data/Physiology/Length/F1/cumulative_raw/F1_lengths_raw.csv",
header=T,stringsAsFactors=FALSE, fileEncoding="latin1")
# unique dates for the dry weight data
unique(F1_length$Date)
F1_length_master <- F1_length %>% # master data file
dplyr::mutate(pCO2 = as.factor(case_when(Treatment == "Low OA" ~ "500 μatm", # add column for pCO2
Treatment == "Moderate OA" ~ "800 μatm",
Treatment == "High OA" ~ "1200 μatm"))) %>%
dplyr::mutate(pCO2 = fct_relevel(pCO2, c("500 μatm","800 μatm","1200 μatm")))# relevel for plotting!
F1_length_master$Length_mm <- as.numeric(F1_length_master$Length_mm)
# means by date and pCO2 - not by replicate tank!
F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2")) %>%
dplyr::arrange(Length_mm)
F1_length_MEANS_bytank <-  F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2","Replicate")) %>%
dplyr::arrange(Length_mm)
# means by date and pCO2 - not by replicate tank!
F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2")) %>%
dplyr::arrange(Length_mm)
F1_length_MEANS_bytank <-  F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2","Replicate")) %>%
dplyr::arrange(Length_mm)
F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2","Replicate"))
# means by date and pCO2 - not by replicate tank!
F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2")) %>%
dplyr::arrange(Length_mm)
F1_length_MEANS_bytank <-  F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2","Replicate")) %>%
dplyr::arrange(Length_mm)
F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2","Replicate"))
F1_length_MEANS_bytank <-  F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2","Replicate"))
F1_length_MEANS_bytank
F1_length_master
F1_length_MEANS_bytank <-  F1_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Date","Age_DPF","pCO2","Replicate"))
F1_length_MEANS_bytank
F1_Length_Histograms <- F1_length_master %>%
dplyr::filter(Age_DPF >= 30) %>%
dplyr::filter(!pCO2 %in% "1200 μatm") %>%
ggplot( aes(x=Length_mm, fill=pCO2)) +
geom_histogram( alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("forestgreen","darkorange2")) +
theme_classic() +
# theme_ipsum() +
# labs(fill="") +
labs(fill='pCO2 treatment') +
scale_x_continuous(name ="Shell length (mm)")+
facet_wrap(~Age_DPF, scales = "free_y")
F1_Length_Histograms
F1_length_MEANS <-  F1_length_MEANS_bytank %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2")) %>%
dplyr::arrange(Length_mm)
F1_Length_MeanSE <- F1_length_MEANS %>%
dplyr::filter(Age_DPF >= 30) %>%
dplyr::filter(!pCO2 %in% "1200 μatm") %>%
ggplot(aes(x=(Age_DPF),
y=Length_mm,
color=as.factor(pCO2))) +
geom_point(position=position_dodge(.5))+
scale_color_manual(values=c("forestgreen",
"darkorange2"))+
geom_errorbar(aes(ymin=Length_mm-se,
ymax=Length_mm+se), width=.2,
position=position_dodge(.5))+
ggtitle("Shell lengths (mm) - mean+-SE") +
theme_classic() +
xlab("Age (dpf)") +
#xlab("Age (d)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="none")+
scale_y_continuous(name ="Shell length (mm)")+
geom_line(stat = "identity", size=1.0)+
# labs(color='pCO2 treatment') + # legend name
theme(text = element_text(size=10))
ggarrange(F1_Length_Histograms, F1_Length_MeanSE, ncol = 2)
# call after 30 days post fertilization and
F1_length_MEANS_growout <- F1_length_MEANS_bytank %>%
dplyr::filter(Age_DPF >= 30) %>%
dplyr::filter(!pCO2 %in% "1200 μatm")
# (1) First, run anova within date for all records (for looped!)
ANOVA_Age_DPF      <- as.data.frame(unique(F1_length_MEANS_growout$Age_DPF)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Age_DPF', 'Metric', 'ShapiroWilk', 'ResidNorm', 'Levenes', 'HomogVar', 'model', 'DF.num' , 'DF.denom', 'F_val','P_val', 'SigDif') # names for comuns in the for loop
for (i in 1:nrow(ANOVA_Age_DPF)) {
Age_loop     <- as.character(ANOVA_Age_DPF[i,])
data_loop     <- F1_length_MEANS_growout %>% # call the dataset above - after 30 dpf and for only the two treatments
dplyr::filter(Age_DPF %in% Age_loop) %>%
dplyr::select(Age_DPF, pCO2, Length_mm)
# high cholorphyll model
DF_loop$Age_DPF     <- Age_loop
DF_loop$Metric      <- colnames(data_loop[3])
# run both modles
AOVmod              <- aov(lm(data_loop$Length_mm ~ as.factor(data_loop$pCO2)))
KWmod               <- kruskal.test(data_loop$Length_mm  ~ as.factor(data_loop$pCO2))
# normality tests for the anova model - asign
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
if(shapiro.test(resid(AOVmod))[[2]] > 0.05 & leveneTest(AOVmod)[[3]][[1]] > 0.05) {
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
} else {
DF_loop$model       <- 'kruskal-wallis; x ~ treatment'
DF_loop$DF.num      <- (KWmod)[[2]][["df"]][1]
DF_loop$DF.denom    <- NA
DF_loop$F_val       <- NA
DF_loop$P_val       <- (KWmod)[[3]]
DF_loop$SigDif      <- if( ((KWmod)[[3]]) > 0.05) {
'NO'} else {'YES'}
}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
View(AOVdf_total %>% dplyr::filter(P_val < 0.05))
write.csv(AOVdf_total, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_Length_ANOVA_table.csv")
write.csv(F1_length_MEANS_bytank, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_Mean_Length_by_tank.csv")
write.csv(F1_length_MEANS_bytank, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F1/F1_Mean_Length_by_tank.csv")
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(performance)
library(car)
library(ggpubr)
library(SciViews)
library(Rmisc)
library(hrbrthemes)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis")
# F2s
F2_length <- read.csv(file="Data/Physiology/Length/F2/cumulative_raw/F2_lengths_raw.csv",
header=T,stringsAsFactors=FALSE, fileEncoding="latin1")
# unique dates for the dry weight data
unique(F2_length$Date)
F2_length_master <- F2_length %>% # master data file
dplyr::mutate(pCO2 = as.factor(case_when(Treatment == "Low OA" ~ "500 μatm", # add column for pCO2
Treatment == "Moderate OA" ~ "800 μatm",
Treatment == "High OA" ~ "1200 μatm"))) %>%
dplyr::mutate(pCO2 = fct_relevel(pCO2, c("500 μatm","800 μatm","1200 μatm")))# relevel for plotting!
F2_length_master$Length_mm <- as.numeric(F2_length_master$Length_mm)
# means by date and pCO2 - not by replicate tank!
F2_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2")) %>%
dplyr::arrange(Length_mm)
F2_length_MEANS_bytank <-  F2_length_master %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2","Replicate")) %>%
dplyr::arrange(Length_mm)
write.csv(F2_length_MEANS_bytank, "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis/Output/Length/F2/F2_Mean_Length_by_tank.csv")
F2_Length_Histograms <- F2_length_master %>%
ggplot( aes(x=Length_mm, fill=pCO2)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("forestgreen","darkorange2","purple")) +
theme_classic() +
# theme_ipsum() +
labs(fill="") +
labs(fill='pCO2 treatment') +
scale_x_continuous(name ="Shell length (mm)")+
facet_wrap(~Age_DPF, scales = "free_y")
F2_Length_Density <- F2_length_master %>%
ggplot(aes(Length_mm, colour = pCO2)) +
# geom_histogram( color="#e9ecef", alpha=0.2, position = 'identity') +
geom_density(show.legend = F) +
scale_color_manual(values=c("forestgreen","darkorange2","purple")) +
theme_classic() +
# theme_ipsum() +
labs(fill="") +
facet_wrap(~Age_DPF, scales = "free_y")
F2_Length_scaled_density <- ggplot(data =F2_length_master,aes(x=Length_mm)) +
geom_density(aes(x = Length_mm, group=pCO2, fill=pCO2, ..scaled..), alpha = 0.3, adjust=1.5) +
theme_classic() +
scale_fill_manual(values=c("forestgreen","darkorange2","purple")) +
ggtitle("Length (mm)") +
facet_wrap( ~ Age_DPF)
F2_length_MEANS <-  F2_length_MEANS_bytank %>%
summarySE(measurevar="Length_mm", groupvars=c("Age_DPF","pCO2")) %>%
dplyr::arrange(Length_mm)
F2_Length_MeanSE <- F2_length_MEANS %>%
ggplot(aes(x=(Age_DPF),
y=Length_mm,
color=as.factor(pCO2))) +
geom_point(position=position_dodge(.5))+
scale_color_manual(values=c("forestgreen",
"darkorange2",
"purple"))+
geom_errorbar(aes(ymin=Length_mm-se,
ymax=Length_mm+se), width=.2,
position=position_dodge(.5))+
ggtitle("Shell lengths (mm) - mean+-SE") +
theme_classic() +
xlab("Age (dpf)") +
#xlab("Age (d)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="none")+
scale_y_continuous(name ="Shell length (mm)")+
geom_line(stat = "identity", size=1.0)+
# labs(color='pCO2 treatment') + # legend name
theme(text = element_text(size=10))
ggarrange(F2_Length_Histograms, F2_Length_MeanSE, ncol = 2)
